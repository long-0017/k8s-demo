apiVersion: v1
kind: Service
metadata:
  name: spring-boot-service
spec:
  type: NodePort
  selector:
    app: spring-boot-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-boot-app
  template:
    metadata:
      labels:
        app: spring-boot-app
    spec:
      containers:
      - name: spring-boot-container
        image: spring-boot-k8s-app:1.2.0  # 替换为你的镜像地址
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: root-password
        - name: REDIS_HOST
          value: "redis-service"
        - name: NACOS_SERVER
          value: "nacos-headless"
        - name: NACOS_PORT
          value: "8848"
        # 集群内的访问kafka-svc.kafka.svc.cluster.local
        - name: KAFKA_SERVER
          value: "kafka-svc.kafka.svc.cluster.local"
        - name: KAFKA_PORT
          value: "9092"
